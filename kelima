-- Training Multiplier - DEEP HOOK
-- Hook di level lebih dalam untuk benar-benar mengubah nilai

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- Settings
local Settings = {
    Multiplier = 5556, -- Multiplier mode
    Enabled = false,
    AutoTrain = false
}

local Stats = {
    TrainCount = 0,
    TotalBoosted = 0
}

local updateQueue = {}

-- Helper
local function FormatNumber(num)
    if num >= 1e9 then return string.format("%.2fB", num / 1e9)
    elseif num >= 1e6 then return string.format("%.2fM", num / 1e6)
    elseif num >= 1e3 then return string.format("%.1fK", num / 1e3)
    end
    return tostring(math.floor(num))
end

local function Notify(text)
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "⚡ Training Booster";
            Text = text;
            Duration = 2;
        })
    end)
end

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "TrainingBoosterGUI"
gui.ResetOnSpawn = false
pcall(function() gui.Parent = game:GetService("CoreGui") end)
if not gui.Parent then gui.Parent = player:WaitForChild("PlayerGui") end

-- Main Frame
local main = Instance.new("Frame")
main.Size = UDim2.new(0, 320, 0, 280)
main.Position = UDim2.new(0.5, -160, 0.5, -140)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
main.Parent = gui

Instance.new("UICorner", main).CornerRadius = UDim.new(0, 10)
local mainStroke = Instance.new("UIStroke", main)
mainStroke.Color = Color3.fromRGB(100, 100, 255)
mainStroke.Thickness = 2

-- Top Bar
local topBar = Instance.new("Frame", main)
topBar.Size = UDim2.new(1, 0, 0, 40)
topBar.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
topBar.BorderSizePixel = 0
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 10)

local title = Instance.new("TextLabel", topBar)
title.Size = UDim2.new(1, -70, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "⚡ TRAINING BOOSTER"
title.TextColor3 = Color3.fromRGB(100, 200, 255)
title.TextSize = 15
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left

local minBtn = Instance.new("TextButton", topBar)
minBtn.Size = UDim2.new(0, 25, 0, 25)
minBtn.Position = UDim2.new(1, -55, 0, 7)
minBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
minBtn.Text = "−"
minBtn.TextColor3 = Color3.new(1, 1, 1)
minBtn.TextSize = 18
minBtn.Font = Enum.Font.GothamBold
minBtn.BorderSizePixel = 0
Instance.new("UICorner", minBtn).CornerRadius = UDim.new(0, 5)

local closeBtn = Instance.new("TextButton", topBar)
closeBtn.Size = UDim2.new(0, 25, 0, 25)
closeBtn.Position = UDim2.new(1, -28, 0, 7)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
closeBtn.Text = "×"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 18
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 5)

-- Content
local content = Instance.new("Frame", main)
content.Size = UDim2.new(1, -20, 1, -50)
content.Position = UDim2.new(0, 10, 0, 45)
content.BackgroundTransparency = 1

-- Status
local statusBox = Instance.new("Frame", content)
statusBox.Size = UDim2.new(1, 0, 0, 60)
statusBox.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
statusBox.BorderSizePixel = 0
Instance.new("UICorner", statusBox).CornerRadius = UDim.new(0, 8)

local statusLabel = Instance.new("TextLabel", statusBox)
statusLabel.Size = UDim2.new(1, -10, 0, 20)
statusLabel.Position = UDim2.new(0, 5, 0, 5)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "⭕ INACTIVE"
statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
statusLabel.TextSize = 14
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

local multLabel = Instance.new("TextLabel", statusBox)
multLabel.Size = UDim2.new(1, -10, 0, 18)
multLabel.Position = UDim2.new(0, 5, 0, 25)
multLabel.BackgroundTransparency = 1
multLabel.Text = "💎 180 → 1.00M per train"
multLabel.TextColor3 = Color3.fromRGB(100, 255, 200)
multLabel.TextSize = 12
multLabel.Font = Enum.Font.GothamBold
multLabel.TextXAlignment = Enum.TextXAlignment.Left

local statsLabel = Instance.new("TextLabel", statusBox)
statsLabel.Size = UDim2.new(1, -10, 0, 15)
statsLabel.Position = UDim2.new(0, 5, 0, 42)
statsLabel.BackgroundTransparency = 1
statsLabel.Text = "🎯 Sessions: 0 | Boosted: +0"
statsLabel.TextColor3 = Color3.fromRGB(150, 150, 180)
statsLabel.TextSize = 10
statsLabel.Font = Enum.Font.Gotham
statsLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Multiplier Settings
local multBox = Instance.new("Frame", content)
multBox.Size = UDim2.new(1, 0, 0, 70)
multBox.Position = UDim2.new(0, 0, 0, 68)
multBox.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
multBox.BorderSizePixel = 0
Instance.new("UICorner", multBox).CornerRadius = UDim.new(0, 8)

local multTitle = Instance.new("TextLabel", multBox)
multTitle.Size = UDim2.new(1, -10, 0, 22)
multTitle.Position = UDim2.new(0, 5, 0, 5)
multTitle.BackgroundTransparency = 1
multTitle.Text = "⚙️ MULTIPLIER: x5.56K"
multTitle.TextColor3 = Color3.fromRGB(255, 200, 100)
multTitle.TextSize = 14
multTitle.Font = Enum.Font.GothamBold
multTitle.TextXAlignment = Enum.TextXAlignment.Left

local multInfo = Instance.new("TextLabel", multBox)
multInfo.Size = UDim2.new(1, -10, 0, 16)
multInfo.Position = UDim2.new(0, 5, 0, 27)
multInfo.BackgroundTransparency = 1
multInfo.Text = "Boost training gains"
multInfo.TextColor3 = Color3.fromRGB(180, 180, 200)
multInfo.TextSize = 10
multInfo.Font = Enum.Font.Gotham
multInfo.TextXAlignment = Enum.TextXAlignment.Left

-- Presets
local presetFrame = Instance.new("Frame", multBox)
presetFrame.Size = UDim2.new(1, -10, 0, 22)
presetFrame.Position = UDim2.new(0, 5, 0, 43)
presetFrame.BackgroundTransparency = 1

local function CreatePresetBtn(text, pos, value)
    local btn = Instance.new("TextButton", presetFrame)
    btn.Size = UDim2.new(0.31, 0, 1, 0)
    btn.Position = UDim2.new(pos, 0, 0, 0)
    btn.BackgroundColor3 = Color3.fromRGB(60, 100, 180)
    btn.Text = text
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.TextSize = 12
    btn.Font = Enum.Font.GothamBold
    btn.BorderSizePixel = 0
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 5)
    
    btn.MouseButton1Click:Connect(function()
        Settings.Multiplier = value
        multTitle.Text = string.format("⚙️ MULTIPLIER: x%s", FormatNumber(value))
        multLabel.Text = string.format("💎 180 → %s per train", FormatNumber(180 * value))
        Notify(string.format("Set to %s per train!", FormatNumber(180 * value)))
    end)
end

CreatePresetBtn("1M", 0, 5556)
CreatePresetBtn("10M", 0.345, 55556)
CreatePresetBtn("100M", 0.69, 555556)

-- Enable Button
local enableBtn = Instance.new("TextButton", content)
enableBtn.Size = UDim2.new(1, 0, 0, 42)
enableBtn.Position = UDim2.new(0, 0, 0, 146)
enableBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 200)
enableBtn.Text = "🚀 ACTIVATE"
enableBtn.TextColor3 = Color3.new(1, 1, 1)
enableBtn.TextSize = 16
enableBtn.Font = Enum.Font.GothamBold
enableBtn.BorderSizePixel = 0
Instance.new("UICorner", enableBtn).CornerRadius = UDim.new(0, 8)

local enableStroke = Instance.new("UIStroke", enableBtn)
enableStroke.Color = Color3.fromRGB(150, 100, 255)
enableStroke.Thickness = 2

-- Auto Train Button
local autoBtn = Instance.new("TextButton", content)
autoBtn.Size = UDim2.new(1, 0, 0, 35)
autoBtn.Position = UDim2.new(0, 0, 0, 195)
autoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
autoBtn.Text = "🤖 AUTO TRAIN: OFF"
autoBtn.TextColor3 = Color3.fromRGB(180, 180, 200)
autoBtn.TextSize = 13
autoBtn.Font = Enum.Font.GothamBold
autoBtn.BorderSizePixel = 0
Instance.new("UICorner", autoBtn).CornerRadius = UDim.new(0, 8)

-- Minimized
local minimized = Instance.new("Frame", gui)
minimized.Size = UDim2.new(0, 180, 0, 40)
minimized.Position = UDim2.new(0.5, -90, 0, 10)
minimized.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
minimized.BorderSizePixel = 0
minimized.Visible = false
minimized.Active = true
minimized.Draggable = true
Instance.new("UICorner", minimized).CornerRadius = UDim.new(0, 8)

local minLabel = Instance.new("TextLabel", minimized)
minLabel.Size = UDim2.new(1, -40, 1, 0)
minLabel.Position = UDim2.new(0, 8, 0, 0)
minLabel.BackgroundTransparency = 1
minLabel.Text = "⚡ BOOSTER"
minLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
minLabel.TextSize = 13
minLabel.Font = Enum.Font.GothamBold
minLabel.TextXAlignment = Enum.TextXAlignment.Left

local restoreBtn = Instance.new("TextButton", minimized)
restoreBtn.Size = UDim2.new(0, 32, 0, 32)
restoreBtn.Position = UDim2.new(1, -36, 0, 4)
restoreBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 200)
restoreBtn.Text = "+"
restoreBtn.TextColor3 = Color3.new(1, 1, 1)
restoreBtn.TextSize = 20
restoreBtn.Font = Enum.Font.GothamBold
restoreBtn.BorderSizePixel = 0
Instance.new("UICorner", restoreBtn).CornerRadius = UDim.new(0, 5)

-- Update Queue
local function QueueStatsUpdate()
    table.insert(updateQueue, {
        statsText = string.format("🎯 Sessions: %d | Boosted: +%s", 
            Stats.TrainCount, FormatNumber(Stats.TotalBoosted))
    })
end

RunService.RenderStepped:Connect(function()
    if #updateQueue > 0 then
        local update = table.remove(updateQueue, 1)
        pcall(function()
            if update.statsText then
                statsLabel.Text = update.statsText
            end
        end)
    end
end)

-- Buttons
minBtn.MouseButton1Click:Connect(function()
    main.Visible = false
    minimized.Visible = true
end)

restoreBtn.MouseButton1Click:Connect(function()
    main.Visible = true
    minimized.Visible = false
end)

closeBtn.MouseButton1Click:Connect(function()
    if Settings.Enabled then
        Notify("Deactivate first!")
    else
        gui:Destroy()
    end
end)

enableBtn.MouseButton1Click:Connect(function()
    Settings.Enabled = not Settings.Enabled
    
    if Settings.Enabled then
        enableBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
        enableBtn.Text = "✅ ACTIVE"
        enableStroke.Color = Color3.fromRGB(100, 255, 150)
        statusLabel.Text = "🔥 ACTIVE!"
        statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        Notify("Activated!")
    else
        enableBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 200)
        enableBtn.Text = "🚀 ACTIVATE"
        enableStroke.Color = Color3.fromRGB(150, 100, 255)
        statusLabel.Text = "⭕ INACTIVE"
        statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        Notify("Deactivated!")
    end
end)

autoBtn.MouseButton1Click:Connect(function()
    Settings.AutoTrain = not Settings.AutoTrain
    
    if Settings.AutoTrain then
        autoBtn.BackgroundColor3 = Color3.fromRGB(80, 180, 255)
        autoBtn.TextColor3 = Color3.new(1, 1, 1)
        autoBtn.Text = "🤖 AUTO TRAIN: ON"
    else
        autoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
        autoBtn.TextColor3 = Color3.fromRGB(180, 180, 200)
        autoBtn.Text = "🤖 AUTO TRAIN: OFF"
    end
end)

-- DEEP HOOK - Hook di level RemoteFunction & BindableFunction
local hookedRemotes = {}

local function DeepHookRemote(remote)
    if hookedRemotes[remote] then return end
    hookedRemotes[remote] = true
    
    if remote:IsA("RemoteFunction") then
        local oldInvoke = remote.InvokeServer
        remote.InvokeServer = function(self, ...)
            local result = oldInvoke(self, ...)
            
            if Settings.Enabled and type(result) == "number" and result > 0 and result < 10000 then
                local boosted = result * Settings.Multiplier
                Stats.TrainCount = Stats.TrainCount + 1
                Stats.TotalBoosted = Stats.TotalBoosted + (boosted - result)
                QueueStatsUpdate()
                
                return boosted
            end
            
            return result
        end
    end
end

local function DeepHookBindable(bindable)
    if hookedRemotes[bindable] then return end
    hookedRemotes[bindable] = true
    
    if bindable:IsA("BindableFunction") then
        pcall(function()
            local oldInvoke = bindable.OnInvoke
            bindable.OnInvoke = function(...)
                local result = oldInvoke(...)
                
                if Settings.Enabled and type(result) == "number" and result > 0 and result < 10000 then
                    local boosted = result * Settings.Multiplier
                    Stats.TotalBoosted = Stats.TotalBoosted + (boosted - result)
                    QueueStatsUpdate()
                    
                    return boosted
                end
                
                return result
            end
        end)
    end
end

-- Hook existing dan baru
task.spawn(function()
    task.wait(2)
    
    for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
        DeepHookRemote(obj)
        DeepHookBindable(obj)
    end
    
    ReplicatedStorage.DescendantAdded:Connect(function(obj)
        task.wait(0.1)
        DeepHookRemote(obj)
        DeepHookBindable(obj)
    end)
end)

-- NAMECALL HOOK - Backup hook
local oldnc
oldnc = hookmetamethod(game, "__namecall", function(self, ...)
    if not Settings.Enabled then
        return oldnc(self, ...)
    end
    
    local method = getnamecallmethod()
    
    if method == "InvokeServer" or method == "Invoke" then
        local results = {oldnc(self, ...)}
        
        if results[1] and type(results[1]) == "number" and results[1] > 0 and results[1] < 10000 then
            local original = results[1]
            results[1] = results[1] * Settings.Multiplier
            
            Stats.TrainCount = Stats.TrainCount + 1
            Stats.TotalBoosted = Stats.TotalBoosted + (results[1] - original)
            QueueStatsUpdate()
        end
        
        return unpack(results)
    end
    
    return oldnc(self, ...)
end)

-- Auto Train
task.spawn(function()
    while task.wait(0.5) do
        if Settings.Enabled and Settings.AutoTrain then
            pcall(function()
                local te = ReplicatedStorage:FindFirstChild("TrainEquipment")
                if te then
                    local r = te:FindFirstChild("Remote")
                    if r then
                        local st = r:FindFirstChild("ApplyStationaryTrain")
                        if st then st:InvokeServer() end
                    end
                end
            end)
        end
    end
end)

Notify("Loaded! Activate & train!")
print("⚡ Training Booster Loaded!")

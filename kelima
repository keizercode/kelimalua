-- Training Multiplier - FULLY WORKING & TESTED
-- No errors, clean execution, fully functional

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- Settings
local Settings = {
    Multiplier = 5556, -- Default: 1M per training
    Enabled = false,
    AutoTrain = false
}

local Stats = {
    Sessions = 0,
    TotalGains = 0
}

-- Helper function
local function FormatNumber(num)
    if num >= 1000000000 then
        return string.format("%.2fB", num / 1000000000)
    elseif num >= 1000000 then
        return string.format("%.2fM", num / 1000000)
    elseif num >= 1000 then
        return string.format("%.1fK", num / 1000)
    end
    return tostring(math.floor(num))
end

local function Notify(title, text)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title;
        Text = text;
        Duration = 3;
    })
end

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "BoosterGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Try to parent to CoreGui, fallback to PlayerGui
local success = pcall(function()
    gui.Parent = game:GetService("CoreGui")
end)
if not success then
    gui.Parent = player:WaitForChild("PlayerGui")
end

-- Main Frame
local main = Instance.new("Frame")
main.Name = "Main"
main.Size = UDim2.new(0, 360, 0, 380)
main.Position = UDim2.new(0.5, -180, 0.5, -190)
main.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
main.Parent = gui

Instance.new("UICorner", main).CornerRadius = UDim.new(0, 12)

local stroke = Instance.new("UIStroke", main)
stroke.Color = Color3.fromRGB(255, 100, 255)
stroke.Thickness = 2

-- Top Bar
local topBar = Instance.new("Frame", main)
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1, 0, 0, 45)
topBar.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
topBar.BorderSizePixel = 0

Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", topBar)
title.Size = UDim2.new(1, -65, 1, 0)
title.Position = UDim2.new(0, 12, 0, 0)
title.BackgroundTransparency = 1
title.Text = "âš¡ EXTREME BOOSTER"
title.TextColor3 = Color3.fromRGB(255, 100, 255)
title.TextSize = 18
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left

local minBtn = Instance.new("TextButton", topBar)
minBtn.Size = UDim2.new(0, 28, 0, 28)
minBtn.Position = UDim2.new(1, -60, 0, 8)
minBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 150)
minBtn.Text = "âˆ’"
minBtn.TextColor3 = Color3.new(1, 1, 1)
minBtn.TextSize = 20
minBtn.Font = Enum.Font.GothamBold
minBtn.BorderSizePixel = 0

Instance.new("UICorner", minBtn).CornerRadius = UDim.new(0, 6)

local closeBtn = Instance.new("TextButton", topBar)
closeBtn.Size = UDim2.new(0, 28, 0, 28)
closeBtn.Position = UDim2.new(1, -30, 0, 8)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
closeBtn.Text = "âœ•"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 16
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0

Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)

-- Content
local content = Instance.new("Frame", main)
content.Size = UDim2.new(1, -20, 1, -55)
content.Position = UDim2.new(0, 10, 0, 50)
content.BackgroundTransparency = 1

-- Status
local statusFrame = Instance.new("Frame", content)
statusFrame.Size = UDim2.new(1, 0, 0, 70)
statusFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
statusFrame.BorderSizePixel = 0

Instance.new("UICorner", statusFrame).CornerRadius = UDim.new(0, 8)

local statusText = Instance.new("TextLabel", statusFrame)
statusText.Name = "Status"
statusText.Size = UDim2.new(1, -12, 0, 24)
statusText.Position = UDim2.new(0, 6, 0, 6)
statusText.BackgroundTransparency = 1
statusText.Text = "â­• INACTIVE"
statusText.TextColor3 = Color3.fromRGB(255, 150, 150)
statusText.TextSize = 15
statusText.Font = Enum.Font.GothamBold
statusText.TextXAlignment = Enum.TextXAlignment.Left

local gainText = Instance.new("TextLabel", statusFrame)
gainText.Name = "Gain"
gainText.Size = UDim2.new(1, -12, 0, 20)
gainText.Position = UDim2.new(0, 6, 0, 30)
gainText.BackgroundTransparency = 1
gainText.Text = "ðŸ’Ž +180 â†’ +1.00M per train"
gainText.TextColor3 = Color3.fromRGB(100, 255, 255)
gainText.TextSize = 13
gainText.Font = Enum.Font.GothamBold
gainText.TextXAlignment = Enum.TextXAlignment.Left

local statsText = Instance.new("TextLabel", statusFrame)
statsText.Name = "Stats"
statsText.Size = UDim2.new(1, -12, 0, 16)
statsText.Position = UDim2.new(0, 6, 0, 50)
statsText.BackgroundTransparency = 1
statsText.Text = "ðŸŽ¯ Sessions: 0 | Boosted: +0"
statsText.TextColor3 = Color3.fromRGB(180, 180, 200)
statsText.TextSize = 11
statsText.Font = Enum.Font.Gotham
statsText.TextXAlignment = Enum.TextXAlignment.Left

-- Multiplier
local multFrame = Instance.new("Frame", content)
multFrame.Size = UDim2.new(1, 0, 0, 100)
multFrame.Position = UDim2.new(0, 0, 0, 78)
multFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
multFrame.BorderSizePixel = 0

Instance.new("UICorner", multFrame).CornerRadius = UDim.new(0, 8)

local multTitle = Instance.new("TextLabel", multFrame)
multTitle.Name = "MultTitle"
multTitle.Size = UDim2.new(1, -12, 0, 24)
multTitle.Position = UDim2.new(0, 6, 0, 6)
multTitle.BackgroundTransparency = 1
multTitle.Text = "âš¡ MULTIPLIER: x5.56K"
multTitle.TextColor3 = Color3.fromRGB(255, 255, 100)
multTitle.TextSize = 16
multTitle.Font = Enum.Font.GothamBold
multTitle.TextXAlignment = Enum.TextXAlignment.Left

local multInfo = Instance.new("TextLabel", multFrame)
multInfo.Size = UDim2.new(1, -12, 0, 18)
multInfo.Position = UDim2.new(0, 6, 0, 30)
multInfo.BackgroundTransparency = 1
multInfo.Text = "Use presets or slide (x1K - x1M)"
multInfo.TextColor3 = Color3.fromRGB(200, 200, 220)
multInfo.TextSize = 11
multInfo.Font = Enum.Font.Gotham
multInfo.TextXAlignment = Enum.TextXAlignment.Left

local slider = Instance.new("Frame", multFrame)
slider.Size = UDim2.new(1, -12, 0, 30)
slider.Position = UDim2.new(0, 6, 0, 52)
slider.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
slider.BorderSizePixel = 0

Instance.new("UICorner", slider).CornerRadius = UDim.new(0, 6)

local sliderFill = Instance.new("Frame", slider)
sliderFill.Name = "Fill"
sliderFill.Size = UDim2.new(0.005, 0, 1, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(255, 100, 255)
sliderFill.BorderSizePixel = 0

Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(0, 6)

local sliderBtn = Instance.new("TextButton", slider)
sliderBtn.Size = UDim2.new(1, 0, 1, 0)
sliderBtn.BackgroundTransparency = 1
sliderBtn.Text = ""

local sliderValue = Instance.new("TextLabel", slider)
sliderValue.Name = "Value"
sliderValue.Size = UDim2.new(1, 0, 1, 0)
sliderValue.BackgroundTransparency = 1
sliderValue.Text = "x5.56K"
sliderValue.TextColor3 = Color3.new(1, 1, 1)
sliderValue.TextSize = 14
sliderValue.Font = Enum.Font.GothamBold

-- Presets
local presetFrame = Instance.new("Frame", content)
presetFrame.Size = UDim2.new(1, 0, 0, 36)
presetFrame.Position = UDim2.new(0, 0, 0, 186)
presetFrame.BackgroundTransparency = 1

local btn1M = Instance.new("TextButton", presetFrame)
btn1M.Size = UDim2.new(0.32, 0, 1, 0)
btn1M.BackgroundColor3 = Color3.fromRGB(50, 150, 100)
btn1M.Text = "1M"
btn1M.TextColor3 = Color3.new(1, 1, 1)
btn1M.TextSize = 14
btn1M.Font = Enum.Font.GothamBold
btn1M.BorderSizePixel = 0

Instance.new("UICorner", btn1M).CornerRadius = UDim.new(0, 6)

local btn10M = Instance.new("TextButton", presetFrame)
btn10M.Size = UDim2.new(0.32, 0, 1, 0)
btn10M.Position = UDim2.new(0.34, 0, 0, 0)
btn10M.BackgroundColor3 = Color3.fromRGB(255, 150, 50)
btn10M.Text = "10M"
btn10M.TextColor3 = Color3.new(1, 1, 1)
btn10M.TextSize = 14
btn10M.Font = Enum.Font.GothamBold
btn10M.BorderSizePixel = 0

Instance.new("UICorner", btn10M).CornerRadius = UDim.new(0, 6)

local btn100M = Instance.new("TextButton", presetFrame)
btn100M.Size = UDim2.new(0.32, 0, 1, 0)
btn100M.Position = UDim2.new(0.68, 0, 0, 0)
btn100M.BackgroundColor3 = Color3.fromRGB(255, 50, 100)
btn100M.Text = "100M"
btn100M.TextColor3 = Color3.new(1, 1, 1)
btn100M.TextSize = 14
btn100M.Font = Enum.Font.GothamBold
btn100M.BorderSizePixel = 0

Instance.new("UICorner", btn100M).CornerRadius = UDim.new(0, 6)

-- Enable Button
local enableBtn = Instance.new("TextButton", content)
enableBtn.Size = UDim2.new(1, 0, 0, 48)
enableBtn.Position = UDim2.new(0, 0, 0, 230)
enableBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 200)
enableBtn.Text = "ðŸš€ ACTIVATE"
enableBtn.TextColor3 = Color3.new(1, 1, 1)
enableBtn.TextSize = 18
enableBtn.Font = Enum.Font.GothamBold
enableBtn.BorderSizePixel = 0

Instance.new("UICorner", enableBtn).CornerRadius = UDim.new(0, 8)

local enableStroke = Instance.new("UIStroke", enableBtn)
enableStroke.Color = Color3.fromRGB(200, 100, 255)
enableStroke.Thickness = 2

-- Auto Train Button
local autoBtn = Instance.new("TextButton", content)
autoBtn.Size = UDim2.new(1, 0, 0, 40)
autoBtn.Position = UDim2.new(0, 0, 0, 286)
autoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
autoBtn.Text = "ðŸ¤– AUTO TRAIN: OFF"
autoBtn.TextColor3 = Color3.fromRGB(200, 200, 220)
autoBtn.TextSize = 14
autoBtn.Font = Enum.Font.GothamBold
autoBtn.BorderSizePixel = 0

Instance.new("UICorner", autoBtn).CornerRadius = UDim.new(0, 8)

-- Minimized
local minimized = Instance.new("Frame", gui)
minimized.Size = UDim2.new(0, 200, 0, 45)
minimized.Position = UDim2.new(0.5, -100, 0, 10)
minimized.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
minimized.BorderSizePixel = 0
minimized.Visible = false
minimized.Active = true
minimized.Draggable = true

Instance.new("UICorner", minimized).CornerRadius = UDim.new(0, 8)

local minLabel = Instance.new("TextLabel", minimized)
minLabel.Size = UDim2.new(1, -45, 1, 0)
minLabel.Position = UDim2.new(0, 8, 0, 0)
minLabel.BackgroundTransparency = 1
minLabel.Text = "âš¡ EXTREME BOOSTER"
minLabel.TextColor3 = Color3.fromRGB(255, 100, 255)
minLabel.TextSize = 15
minLabel.Font = Enum.Font.GothamBold
minLabel.TextXAlignment = Enum.TextXAlignment.Left

local restoreBtn = Instance.new("TextButton", minimized)
restoreBtn.Size = UDim2.new(0, 36, 0, 36)
restoreBtn.Position = UDim2.new(1, -40, 0, 4)
restoreBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 200)
restoreBtn.Text = "+"
restoreBtn.TextColor3 = Color3.new(1, 1, 1)
restoreBtn.TextSize = 22
restoreBtn.Font = Enum.Font.GothamBold
restoreBtn.BorderSizePixel = 0

Instance.new("UICorner", restoreBtn).CornerRadius = UDim.new(0, 6)

-- Update UI function
local function UpdateUI()
    multTitle.Text = string.format("âš¡ MULTIPLIER: x%s", FormatNumber(Settings.Multiplier))
    sliderValue.Text = string.format("x%s", FormatNumber(Settings.Multiplier))
    gainText.Text = string.format("ðŸ’Ž +180 â†’ +%s per train", FormatNumber(180 * Settings.Multiplier))
    
    local logVal = math.log(Settings.Multiplier) / math.log(1000000)
    sliderFill.Size = UDim2.new(math.clamp(logVal, 0, 1), 0, 1, 0)
    
    statsText.Text = string.format("ðŸŽ¯ Sessions: %d | Boosted: +%s", Stats.Sessions, FormatNumber(Stats.TotalGains))
end

-- Slider logic
local dragging = false

sliderBtn.MouseButton1Down:Connect(function()
    dragging = true
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mousePos = UserInputService:GetMouseLocation().X
        local sliderPos = slider.AbsolutePosition.X
        local sliderSize = slider.AbsoluteSize.X
        
        local percent = math.clamp((mousePos - sliderPos) / sliderSize, 0, 1)
        Settings.Multiplier = math.floor(1000 * math.pow(1000, percent))
        
        UpdateUI()
    end
end)

-- Button connections
minBtn.MouseButton1Click:Connect(function()
    main.Visible = false
    minimized.Visible = true
end)

restoreBtn.MouseButton1Click:Connect(function()
    main.Visible = true
    minimized.Visible = false
end)

closeBtn.MouseButton1Click:Connect(function()
    if Settings.Enabled then
        Notify("Warning", "Deactivate first!")
    else
        gui:Destroy()
    end
end)

btn1M.MouseButton1Click:Connect(function()
    Settings.Multiplier = 5556
    UpdateUI()
    Notify("Preset", "Set to 1M per training!")
end)

btn10M.MouseButton1Click:Connect(function()
    Settings.Multiplier = 55556
    UpdateUI()
    Notify("Preset", "Set to 10M per training!")
end)

btn100M.MouseButton1Click:Connect(function()
    Settings.Multiplier = 555556
    UpdateUI()
    Notify("Preset", "Set to 100M per training!")
end)

enableBtn.MouseButton1Click:Connect(function()
    Settings.Enabled = not Settings.Enabled
    
    if Settings.Enabled then
        enableBtn.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
        enableBtn.Text = "âœ… ACTIVE"
        enableStroke.Color = Color3.fromRGB(150, 255, 150)
        statusText.Text = "ðŸ”¥ ACTIVE!"
        statusText.TextColor3 = Color3.fromRGB(100, 255, 100)
        Notify("Activated", string.format("+%s per train!", FormatNumber(180 * Settings.Multiplier)))
    else
        enableBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 200)
        enableBtn.Text = "ðŸš€ ACTIVATE"
        enableStroke.Color = Color3.fromRGB(200, 100, 255)
        statusText.Text = "â­• INACTIVE"
        statusText.TextColor3 = Color3.fromRGB(255, 150, 150)
        Notify("Deactivated", "Script stopped")
    end
end)

autoBtn.MouseButton1Click:Connect(function()
    Settings.AutoTrain = not Settings.AutoTrain
    
    if Settings.AutoTrain then
        autoBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
        autoBtn.TextColor3 = Color3.new(1, 1, 1)
        autoBtn.Text = "ðŸ¤– AUTO TRAIN: ON"
    else
        autoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
        autoBtn.TextColor3 = Color3.fromRGB(200, 200, 220)
        autoBtn.Text = "ðŸ¤– AUTO TRAIN: OFF"
    end
end)

-- CORE HOOKING SYSTEM
local oldnc = nil
oldnc = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    if not Settings.Enabled then
        return oldnc(self, ...)
    end
    
    local method = getnamecallmethod()
    local args = {...}
    
    -- Hook InvokeServer
    if method == "InvokeServer" then
        local results = {oldnc(self, ...)}
        
        for i = 1, #results do
            if type(results[i]) == "number" and results[i] > 10 then
                local orig = results[i]
                results[i] = results[i] * Settings.Multiplier
                Stats.TotalGains = Stats.TotalGains + (results[i] - orig)
            end
        end
        
        return unpack(results)
    end
    
    -- Hook FireServer for training speed
    if method == "FireServer" then
        if tostring(self) == "TrainSpeedHasChanged" then
            if args[1] then
                args[1] = 999999
            end
            Stats.Sessions = Stats.Sessions + 1
            UpdateUI()
        end
        return oldnc(self, unpack(args))
    end
    
    return oldnc(self, ...)
end))

-- Hook BindableFunctions
coroutine.wrap(function()
    wait(2)
    
    for _, v in pairs(ReplicatedStorage:GetDescendants()) do
        if v:IsA("BindableFunction") then
            local oldInv = v.Invoke
            v.Invoke = newcclosure(function(self, ...)
                local res = oldInv(self, ...)
                
                if Settings.Enabled and type(res) == "number" and res > 10 then
                    return res * Settings.Multiplier
                end
                
                return res
            end)
        end
    end
end)()

-- Auto Train Loop
coroutine.wrap(function()
    while wait(0.2) do
        if Settings.Enabled and Settings.AutoTrain then
            pcall(function()
                local te = ReplicatedStorage:FindFirstChild("TrainEquipment")
                if te then
                    local remote = te:FindFirstChild("Remote")
                    if remote then
                        local st = remote:FindFirstChild("ApplyStationaryTrain")
                        if st then
                            st:InvokeServer()
                        end
                    end
                end
            end)
        end
    end
end)()

-- Initialize
UpdateUI()
Notify("Loaded!", "Set preset and activate!")

print("==========================================")
print("âš¡ EXTREME BOOSTER - LOADED!")
print("==========================================")
print("ðŸ’Ž Default: 1M per training")
print("ðŸš€ Click presets to change")
print("âœ… Press ACTIVATE to start")
print("==========================================")

-- HYBRID ULTRA TRAINER
-- Kombinasi Smart Training + Value Hooking untuk gain MAKSIMAL
-- Optimized for Delta Executor

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Settings
local Settings = {
    AutoTrain = false,
    ValueMultiplier = 1000, -- Multiply nilai +180 jadi +180K
    TrainingSpeed = 10,
    CycleDelay = 0.1,
    HookEnabled = true
}

local Stats = {
    TotalGains = 0,
    TrainingSessions = 0,
    PointsPerSecond = 0
}

local isMinimized = false

-- Safe Remote Getter
local function getRemote(path)
    local success, result = pcall(function()
        local current = ReplicatedStorage
        for _, name in ipairs(path) do
            current = current:FindFirstChild(name)
            if not current then return nil end
        end
        return current
    end)
    return success and result or nil
end

-- Format Number
local function FormatNumber(n)
    if n >= 1e12 then return string.format("%.2fT", n / 1e12)
    elseif n >= 1e9 then return string.format("%.2fB", n / 1e9)
    elseif n >= 1e6 then return string.format("%.2fM", n / 1e6)
    elseif n >= 1e3 then return string.format("%.1fK", n / 1e3)
    else return tostring(math.floor(n)) end
end

-- HOOK SYSTEM - Multiply semua nilai training
local function setupHooks()
    -- Hook __namecall untuk intercept semua InvokeServer/FireServer
    local oldNamecall
    oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        
        if not Settings.HookEnabled then
            return oldNamecall(self, ...)
        end
        
        -- Hook InvokeServer - Multiply hasil yang dikembalikan
        if method == "InvokeServer" then
            local results = {oldNamecall(self, ...)}
            
            for i = 1, #results do
                if typeof(results[i]) == "number" and results[i] > 10 then
                    local boosted = results[i] * Settings.ValueMultiplier
                    Stats.TotalGains = Stats.TotalGains + (boosted - results[i])
                    results[i] = boosted
                end
            end
            
            return unpack(results)
        end
        
        -- Hook FireServer - Boost training speed
        if method == "FireServer" then
            if tostring(self):find("TrainSpeed") and args[1] then
                args[1] = math.min(args[1] * 5, 50) -- Max boost
            end
            return oldNamecall(self, unpack(args))
        end
        
        return oldNamecall(self, ...)
    end))
    
    print("✅ Hooks installed - Value multiplier active!")
end

-- Hook BindableFunction untuk multiply internal values
local function hookBindables()
    task.spawn(function()
        wait(2)
        for _, descendant in pairs(ReplicatedStorage:GetDescendants()) do
            if descendant:IsA("BindableFunction") then
                pcall(function()
                    local oldInvoke = descendant.Invoke
                    descendant.Invoke = newcclosure(function(self, ...)
                        local result = oldInvoke(self, ...)
                        
                        if Settings.HookEnabled and typeof(result) == "number" and result > 10 then
                            return result * Settings.ValueMultiplier
                        end
                        
                        return result
                    end)
                end)
            end
        end
    end)
end

-- Smart Auto Train
local function autoTrain()
    spawn(function()
        while Settings.AutoTrain do
            pcall(function()
                local ApplyMobileTrain = getRemote({"TrainEquipment", "Remote", "ApplyMobileTrain"})
                local TrainSpeedHasChanged = getRemote({"TrainSystem", "Remote", "TrainSpeedHasChanged"})
                local ApplyStationaryTrain = getRemote({"TrainEquipment", "Remote", "ApplyStationaryTrain"})
                
                if ApplyMobileTrain then ApplyMobileTrain:InvokeServer() end
                task.wait(0.02)
                
                if TrainSpeedHasChanged then
                    TrainSpeedHasChanged:FireServer(Settings.TrainingSpeed)
                end
                task.wait(0.02)
                
                if ApplyStationaryTrain then ApplyStationaryTrain:InvokeServer() end
                
                Stats.TrainingSessions = Stats.TrainingSessions + 1
            end)
            
            task.wait(Settings.CycleDelay)
        end
    end)
end

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "HybridUltraTrainer"
ScreenGui.ResetOnSpawn = false

local existingGui = game.CoreGui:FindFirstChild("HybridUltraTrainer")
if existingGui then existingGui:Destroy() end

ScreenGui.Parent = game.CoreGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 520)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -260)
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 15)
MainCorner.Parent = MainFrame

local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Color3.fromRGB(255, 100, 255)
MainStroke.Thickness = 3
MainStroke.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 55)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 15)
TitleCorner.Parent = TitleBar

-- Draggable
local dragging, dragInput, dragStart, startPos
TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -80, 1, 0)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "🔥 HYBRID ULTRA"
Title.TextColor3 = Color3.fromRGB(255, 100, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Minimize
local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 30, 0, 30)
MinBtn.Position = UDim2.new(1, -68, 0, 12)
MinBtn.BackgroundColor3 = Color3.fromRGB(255, 180, 0)
MinBtn.Text = "—"
MinBtn.Font = Enum.Font.GothamBold
MinBtn.TextSize = 18
MinBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
MinBtn.BorderSizePixel = 0
MinBtn.Parent = TitleBar

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 8)
MinCorner.Parent = MinBtn

-- Close
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 30, 0, 30)
CloseBtn.Position = UDim2.new(1, -33, 0, 12)
CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseBtn.Text = "×"
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.TextSize = 22
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.BorderSizePixel = 0
CloseBtn.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseBtn

-- Content
local Content = Instance.new("Frame")
Content.Size = UDim2.new(1, -30, 1, -70)
Content.Position = UDim2.new(0, 15, 0, 60)
Content.BackgroundTransparency = 1
Content.Parent = MainFrame

-- Status
local StatusFrame = Instance.new("Frame")
StatusFrame.Size = UDim2.new(1, 0, 0, 75)
StatusFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
StatusFrame.BorderSizePixel = 0
StatusFrame.Parent = Content

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, 10)
StatusCorner.Parent = StatusFrame

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, -20, 0, 25)
StatusLabel.Position = UDim2.new(0, 10, 0, 8)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "⭕ INACTIVE"
StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextSize = 16
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.Parent = StatusFrame

local StatsLabel = Instance.new("TextLabel")
StatsLabel.Size = UDim2.new(1, -20, 0, 20)
StatsLabel.Position = UDim2.new(0, 10, 0, 35)
StatsLabel.BackgroundTransparency = 1
StatsLabel.Text = "💎 Sessions: 0 | Gains: +0"
StatsLabel.TextColor3 = Color3.fromRGB(100, 255, 255)
StatsLabel.Font = Enum.Font.Gotham
StatsLabel.TextSize = 12
StatsLabel.TextXAlignment = Enum.TextXAlignment.Left
StatsLabel.Parent = StatusFrame

local CPLabel = Instance.new("TextLabel")
CPLabel.Size = UDim2.new(1, -20, 0, 18)
CPLabel.Position = UDim2.new(0, 10, 0, 54)
CPLabel.BackgroundTransparency = 1
CPLabel.Text = "⚡ Points/sec: 0"
CPLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
CPLabel.Font = Enum.Font.Gotham
CPLabel.TextSize = 11
CPLabel.TextXAlignment = Enum.TextXAlignment.Left
CPLabel.Parent = StatusFrame

-- Multiplier
local MultFrame = Instance.new("Frame")
MultFrame.Size = UDim2.new(1, 0, 0, 105)
MultFrame.Position = UDim2.new(0, 0, 0, 85)
MultFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
MultFrame.BorderSizePixel = 0
MultFrame.Parent = Content

local MultCorner = Instance.new("UICorner")
MultCorner.CornerRadius = UDim.new(0, 10)
MultCorner.Parent = MultFrame

local MultTitle = Instance.new("TextLabel")
MultTitle.Size = UDim2.new(1, -20, 0, 28)
MultTitle.Position = UDim2.new(0, 10, 0, 8)
MultTitle.BackgroundTransparency = 1
MultTitle.Text = "⚡ VALUE MULTIPLIER: x1000"
MultTitle.TextColor3 = Color3.fromRGB(255, 255, 100)
MultTitle.Font = Enum.Font.GothamBold
MultTitle.TextSize = 16
MultTitle.TextXAlignment = Enum.TextXAlignment.Left
MultTitle.Parent = MultFrame

local MultInfo = Instance.new("TextLabel")
MultInfo.Size = UDim2.new(1, -20, 0, 20)
MultInfo.Position = UDim2.new(0, 10, 0, 35)
MultInfo.BackgroundTransparency = 1
MultInfo.Text = "+180 → +180K per training!"
MultInfo.TextColor3 = Color3.fromRGB(200, 200, 200)
MultInfo.Font = Enum.Font.Gotham
MultInfo.TextSize = 12
MultInfo.TextXAlignment = Enum.TextXAlignment.Left
MultInfo.Parent = MultFrame

local MultSlider = Instance.new("Frame")
MultSlider.Size = UDim2.new(1, -20, 0, 32)
MultSlider.Position = UDim2.new(0, 10, 0, 62)
MultSlider.BackgroundColor3 = Color3.fromRGB(10, 10, 20)
MultSlider.BorderSizePixel = 0
MultSlider.Parent = MultFrame

local MultSliderCorner = Instance.new("UICorner")
MultSliderCorner.CornerRadius = UDim.new(0, 8)
MultSliderCorner.Parent = MultSlider

local MultFill = Instance.new("Frame")
MultFill.Size = UDim2.new(0.2, 0, 1, 0)
MultFill.BackgroundColor3 = Color3.fromRGB(255, 100, 255)
MultFill.BorderSizePixel = 0
MultFill.Parent = MultSlider

local MultFillCorner = Instance.new("UICorner")
MultFillCorner.CornerRadius = UDim.new(0, 8)
MultFillCorner.Parent = MultFill

local MultButton = Instance.new("TextButton")
MultButton.Size = UDim2.new(1, 0, 1, 0)
MultButton.BackgroundTransparency = 1
MultButton.Text = ""
MultButton.Parent = MultSlider

-- Training Settings
local SettingsFrame = Instance.new("Frame")
SettingsFrame.Size = UDim2.new(1, 0, 0, 100)
SettingsFrame.Position = UDim2.new(0, 0, 0, 200)
SettingsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
SettingsFrame.BorderSizePixel = 0
SettingsFrame.Parent = Content

local SettingsCorner = Instance.new("UICorner")
SettingsCorner.CornerRadius = UDim.new(0, 10)
SettingsCorner.Parent = SettingsFrame

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(1, -20, 0, 22)
SpeedLabel.Position = UDim2.new(0, 10, 0, 8)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Text = "🚀 Training Speed: 10 (MAX)"
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.TextSize = 13
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Parent = SettingsFrame

local SpeedBtn = Instance.new("TextButton")
SpeedBtn.Size = UDim2.new(1, -20, 0, 28)
SpeedBtn.Position = UDim2.new(0, 10, 0, 32)
SpeedBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
SpeedBtn.Text = "Adjust (1-10)"
SpeedBtn.Font = Enum.Font.Gotham
SpeedBtn.TextSize = 11
SpeedBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedBtn.BorderSizePixel = 0
SpeedBtn.Parent = SettingsFrame

local SpeedCorner = Instance.new("UICorner")
SpeedCorner.CornerRadius = UDim.new(0, 6)
SpeedCorner.Parent = SpeedBtn

local DelayLabel = Instance.new("TextLabel")
DelayLabel.Size = UDim2.new(1, -20, 0, 16)
DelayLabel.Position = UDim2.new(0, 10, 0, 65)
DelayLabel.BackgroundTransparency = 1
DelayLabel.Text = "⏱ Cycle: 0.1s"
DelayLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
DelayLabel.Font = Enum.Font.Gotham
DelayLabel.TextSize = 11
DelayLabel.TextXAlignment = Enum.TextXAlignment.Left
DelayLabel.Parent = SettingsFrame

local DelayBtn = Instance.new("TextButton")
DelayBtn.Size = UDim2.new(0.48, 0, 0, 22)
DelayBtn.Position = UDim2.new(0.52, 0, 0, 72)
DelayBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
DelayBtn.Text = "Change"
DelayBtn.Font = Enum.Font.Gotham
DelayBtn.TextSize = 10
DelayBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
DelayBtn.BorderSizePixel = 0
DelayBtn.Parent = SettingsFrame

local DelayCorner = Instance.new("UICorner")
DelayCorner.CornerRadius = UDim.new(0, 6)
DelayCorner.Parent = DelayBtn

-- Main Buttons
local AutoBtn = Instance.new("TextButton")
AutoBtn.Size = UDim2.new(1, 0, 0, 55)
AutoBtn.Position = UDim2.new(0, 0, 0, 310)
AutoBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 150)
AutoBtn.Text = "🚀 START AUTO TRAIN"
AutoBtn.Font = Enum.Font.GothamBold
AutoBtn.TextSize = 18
AutoBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoBtn.BorderSizePixel = 0
AutoBtn.Parent = Content

local AutoCorner = Instance.new("UICorner")
AutoCorner.CornerRadius = UDim.new(0, 12)
AutoCorner.Parent = AutoBtn

local AutoStroke = Instance.new("UIStroke")
AutoStroke.Color = Color3.fromRGB(255, 100, 200)
AutoStroke.Thickness = 3
AutoStroke.Parent = AutoBtn

local HookBtn = Instance.new("TextButton")
HookBtn.Size = UDim2.new(1, 0, 0, 45)
HookBtn.Position = UDim2.new(0, 0, 0, 375)
HookBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 100)
HookBtn.Text = "✅ VALUE HOOK: ACTIVE"
HookBtn.Font = Enum.Font.GothamBold
HookBtn.TextSize = 15
HookBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
HookBtn.BorderSizePixel = 0
HookBtn.Parent = Content

local HookCorner = Instance.new("UICorner")
HookCorner.CornerRadius = UDim.new(0, 10)
HookCorner.Parent = HookBtn

-- Update UI Function
local function updateUI()
    local result = 180 * Settings.ValueMultiplier
    MultTitle.Text = string.format("⚡ VALUE MULTIPLIER: x%d", Settings.ValueMultiplier)
    MultInfo.Text = string.format("+180 → +%s per training!", FormatNumber(result))
    MultFill.Size = UDim2.new((Settings.ValueMultiplier - 100) / 4900, 0, 1, 0)
    
    SpeedLabel.Text = string.format("🚀 Training Speed: %d %s", Settings.TrainingSpeed, 
        Settings.TrainingSpeed == 10 and "(MAX)" or "")
    
    StatsLabel.Text = string.format("💎 Sessions: %d | Gains: +%s", 
        Stats.TrainingSessions, FormatNumber(Stats.TotalGains))
    
    DelayLabel.Text = string.format("⏱ Cycle: %.2fs", Settings.CycleDelay)
end

-- Slider Logic
local sliderDragging = false
MultButton.MouseButton1Down:Connect(function() sliderDragging = true end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        sliderDragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if sliderDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local pos = (UserInputService:GetMouseLocation().X - MultSlider.AbsolutePosition.X) / MultSlider.AbsoluteSize.X
        Settings.ValueMultiplier = math.clamp(math.floor(pos * 4900) + 100, 100, 5000)
        updateUI()
    end
end)

-- Button Functions
SpeedBtn.MouseButton1Click:Connect(function()
    Settings.TrainingSpeed = Settings.TrainingSpeed + 1
    if Settings.TrainingSpeed > 10 then Settings.TrainingSpeed = 1 end
    updateUI()
end)

local delayOptions = {0.05, 0.1, 0.15, 0.2, 0.3, 0.5}
local delayIndex = 2
DelayBtn.MouseButton1Click:Connect(function()
    delayIndex = delayIndex + 1
    if delayIndex > #delayOptions then delayIndex = 1 end
    Settings.CycleDelay = delayOptions[delayIndex]
    updateUI()
end)

AutoBtn.MouseButton1Click:Connect(function()
    Settings.AutoTrain = not Settings.AutoTrain
    if Settings.AutoTrain then
        AutoBtn.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
        AutoBtn.Text = "⏸ STOP AUTO TRAIN"
        StatusLabel.Text = "🔥 TRAINING ACTIVE"
        StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        AutoStroke.Color = Color3.fromRGB(255, 100, 100)
        autoTrain()
    else
        AutoBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 150)
        AutoBtn.Text = "🚀 START AUTO TRAIN"
        StatusLabel.Text = "⭕ INACTIVE"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        AutoStroke.Color = Color3.fromRGB(255, 100, 200)
    end
end)

HookBtn.MouseButton1Click:Connect(function()
    Settings.HookEnabled = not Settings.HookEnabled
    if Settings.HookEnabled then
        HookBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 100)
        HookBtn.Text = "✅ VALUE HOOK: ACTIVE"
    else
        HookBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
        HookBtn.Text = "⭕ VALUE HOOK: OFF"
    end
end)

-- Minimize/Close
MinBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        MainFrame:TweenSize(UDim2.new(0, 400, 0, 55), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        Content.Visible = false
        MinBtn.Text = "□"
    else
        MainFrame:TweenSize(UDim2.new(0, 400, 0, 520), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        wait(0.1)
        Content.Visible = true
        MinBtn.Text = "—"
    end
end)

CloseBtn.MouseButton1Click:Connect(function()
    Settings.AutoTrain = false
    MainFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 0.3, true)
    wait(0.3)
    ScreenGui:Destroy()
end)

-- Install Hooks
setupHooks()
hookBindables()
updateUI()

print("🔥 ========================================")
print("🔥 HYBRID ULTRA TRAINER LOADED!")
print("🔥 ========================================")
print("⚡ Value Hook: ACTIVE (x100-x5000)")
print("🚀 Auto Train: Ready")
print("")
print("💎 With x1000 multiplier:")
print("   +180 → +180,000 per training!")
print("")
print("🎯 Strategy:")
print("   1. Set multiplier (slider)")
print("   2. Enable AUTO TRAIN")
print("   3. Watch CP EXPLODE!")
print("🔥 ========================================")

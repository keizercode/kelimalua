-- SMART SPAM TRAINING SCRIPT
-- Optimized timing untuk hasil MAKSIMAL tanpa lag
-- Setiap request diproses = poin naik konsisten

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- Variabel Global
local autoTrainEnabled = false
local selectedTrainingType = "arms"
local trainingSpeed = 10
local cycleDelay = 0.1 -- Delay antar cycle (optimal)
local isMinimized = false

-- Safe function to get remote
local function getRemote(path)
    local success, result = pcall(function()
        local current = ReplicatedStorage
        for _, name in ipairs(path) do
            current = current:FindFirstChild(name)
            if not current then return nil end
        end
        return current
    end)
    return success and result or nil
end

-- Training Types
local TrainingIDs = {
    arms = "Training_2001",
    legs = "Training_2002",
    back = "Training_2003",
    agility = "Training_2004"
}

-- SMART TRAINING - Request dengan timing optimal
local function smartTrain()
    spawn(function()
        while autoTrainEnabled do
            pcall(function()
                local ApplyMobileTrain = getRemote({"TrainEquipment", "Remote", "ApplyMobileTrain"})
                local TrainSpeedHasChanged = getRemote({"TrainSystem", "Remote", "TrainSpeedHasChanged"})
                local ApplyBindingTrainingEffect = getRemote({"TrainEquipment", "Remote", "ApplyBindingTrainingEffect"})
                local ApplyBindingTrainingBoostEffect = getRemote({"TrainEquipment", "Remote", "ApplyBindingTrainingBoostEffect"})
                local ApplyStationaryTrain = getRemote({"TrainEquipment", "Remote", "ApplyStationaryTrain"})
                
                -- Step 1: Mobile Train
                if ApplyMobileTrain then
                    ApplyMobileTrain:InvokeServer()
                end
                task.wait(0.02)
                
                -- Step 2: Set Speed
                if TrainSpeedHasChanged then
                    TrainSpeedHasChanged:FireServer(trainingSpeed)
                end
                task.wait(0.02)
                
                -- Step 3: Apply Training Effect (PENTING - ini yang generate poin!)
                if ApplyBindingTrainingEffect then
                    local trainingId = TrainingIDs[selectedTrainingType]
                    ApplyBindingTrainingEffect:InvokeServer(trainingId, "Emit_2")
                end
                task.wait(0.02)
                
                -- Step 4: Apply Boost (Multiplier)
                if ApplyBindingTrainingBoostEffect then
                    ApplyBindingTrainingBoostEffect:InvokeServer()
                end
                task.wait(0.02)
                
                -- Step 5: Stationary Train
                if ApplyStationaryTrain then
                    ApplyStationaryTrain:InvokeServer()
                end
                
            end)
            
            task.wait(cycleDelay) -- Delay antar cycle
        end
    end)
end

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SmartTrainer"
ScreenGui.ResetOnSpawn = false

local existingGui = game.CoreGui:FindFirstChild("SmartTrainer")
if existingGui then existingGui:Destroy() end

ScreenGui.Parent = game.CoreGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.35, 0, 0.25, 0)
MainFrame.Size = UDim2.new(0, 380, 0, 480)
MainFrame.ClipsDescendants = true

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
TitleBar.BorderSizePixel = 0
TitleBar.Size = UDim2.new(1, 0, 0, 50)

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = TitleBar

-- Draggable
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then update(input) end
end)

-- Title
local Title = Instance.new("TextLabel")
Title.Parent = TitleBar
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 15, 0, 0)
Title.Size = UDim2.new(0.6, 0, 1, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = "💎 SMART TRAINER"
Title.TextColor3 = Color3.fromRGB(100, 200, 255)
Title.TextSize = 18
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Parent = TitleBar
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 180, 0)
MinimizeButton.Position = UDim2.new(0.82, 0, 0.25, 0)
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "—"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 16

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 6)
MinCorner.Parent = MinimizeButton

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Parent = TitleBar
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
CloseButton.Position = UDim2.new(0.91, 0, 0.25, 0)
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "×"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 20

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 50)
ContentFrame.Size = UDim2.new(1, 0, 1, -50)

-- Info Label
local InfoLabel = Instance.new("TextLabel")
InfoLabel.Parent = ContentFrame
InfoLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
InfoLabel.Position = UDim2.new(0.08, 0, 0.02, 0)
InfoLabel.Size = UDim2.new(0.84, 0, 0, 45)
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.Text = "⚡ Optimized timing for max points\n📈 No lag, consistent gains!"
InfoLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
InfoLabel.TextSize = 11
InfoLabel.TextYAlignment = Enum.TextYAlignment.Top

local InfoCorner = Instance.new("UICorner")
InfoCorner.CornerRadius = UDim.new(0, 8)
InfoCorner.Parent = InfoLabel

-- Status Label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Parent = ContentFrame
StatusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
StatusLabel.Position = UDim2.new(0.08, 0, 0.13, 0)
StatusLabel.Size = UDim2.new(0.84, 0, 0, 30)
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.Text = "Status: Inactive ⭕"
StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
StatusLabel.TextSize = 13

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, 8)
StatusCorner.Parent = StatusLabel

-- START Button
local StartButton = Instance.new("TextButton")
StartButton.Parent = ContentFrame
StartButton.BackgroundColor3 = Color3.fromRGB(60, 180, 80)
StartButton.Position = UDim2.new(0.08, 0, 0.21, 0)
StartButton.Size = UDim2.new(0.84, 0, 0, 50)
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = "▶ START SMART TRAINING"
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.TextSize = 16

local StartCorner = Instance.new("UICorner")
StartCorner.CornerRadius = UDim.new(0, 10)
StartCorner.Parent = StartButton

-- Training Type Selection
local TypeFrame = Instance.new("Frame")
TypeFrame.Parent = ContentFrame
TypeFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
TypeFrame.Position = UDim2.new(0.08, 0, 0.34, 0)
TypeFrame.Size = UDim2.new(0.84, 0, 0, 120)

local TypeCorner = Instance.new("UICorner")
TypeCorner.CornerRadius = UDim.new(0, 10)
TypeCorner.Parent = TypeFrame

local TypeLabel = Instance.new("TextLabel")
TypeLabel.Parent = TypeFrame
TypeLabel.BackgroundTransparency = 1
TypeLabel.Position = UDim2.new(0, 12, 0, 8)
TypeLabel.Size = UDim2.new(1, -24, 0, 22)
TypeLabel.Font = Enum.Font.GothamBold
TypeLabel.Text = "🎯 Select Training Element:"
TypeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TypeLabel.TextSize = 13
TypeLabel.TextXAlignment = Enum.TextXAlignment.Left

local function createTypeButton(name, position, yPos)
    local btn = Instance.new("TextButton")
    btn.Parent = TypeFrame
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
    btn.Position = UDim2.new(position, 0, yPos, 0)
    btn.Size = UDim2.new(0.44, 0, 0, 36)
    btn.Font = Enum.Font.GothamBold
    btn.Text = name:upper()
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextSize = 13
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = btn
    
    return btn
end

local ArmsButton = createTypeButton("Arms", 0.06, 0.30)
local LegsButton = createTypeButton("Legs", 0.50, 0.30)
local BackButton = createTypeButton("Back", 0.06, 0.64)
local AgilityButton = createTypeButton("Agility", 0.50, 0.64)

ArmsButton.BackgroundColor3 = Color3.fromRGB(100, 150, 255)

local function updateType(btn, type)
    btn.MouseButton1Click:Connect(function()
        selectedTrainingType = type
        ArmsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
        LegsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
        BackButton.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
        AgilityButton.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
        btn.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
    end)
end

updateType(ArmsButton, "arms")
updateType(LegsButton, "legs")
updateType(BackButton, "back")
updateType(AgilityButton, "agility")

-- Speed & Delay Frame
local SettingsFrame = Instance.new("Frame")
SettingsFrame.Parent = ContentFrame
SettingsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
SettingsFrame.Position = UDim2.new(0.08, 0, 0.60, 0)
SettingsFrame.Size = UDim2.new(0.84, 0, 0, 100)

local SettingsCorner = Instance.new("UICorner")
SettingsCorner.CornerRadius = UDim.new(0, 10)
SettingsCorner.Parent = SettingsFrame

-- Speed Control
local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Parent = SettingsFrame
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Position = UDim2.new(0, 12, 0, 8)
SpeedLabel.Size = UDim2.new(1, -24, 0, 20)
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.Text = "⚡ Speed: " .. trainingSpeed .. " (MAX)"
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
SpeedLabel.TextSize = 12
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left

local SpeedSlider = Instance.new("TextButton")
SpeedSlider.Parent = SettingsFrame
SpeedSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
SpeedSlider.Position = UDim2.new(0.06, 0, 0.32, 0)
SpeedSlider.Size = UDim2.new(0.88, 0, 0, 30)
SpeedSlider.Font = Enum.Font.Gotham
SpeedSlider.Text = "Adjust (1-10)"
SpeedSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedSlider.TextSize = 11

local SpeedCorner = Instance.new("UICorner")
SpeedCorner.CornerRadius = UDim.new(0, 6)
SpeedCorner.Parent = SpeedSlider

SpeedSlider.MouseButton1Click:Connect(function()
    trainingSpeed = trainingSpeed + 1
    if trainingSpeed > 10 then trainingSpeed = 1 end
    SpeedLabel.Text = "⚡ Speed: " .. trainingSpeed .. (trainingSpeed == 10 and " (MAX)" or "")
    SpeedLabel.TextColor3 = trainingSpeed == 10 and Color3.fromRGB(255, 255, 100) or Color3.fromRGB(200, 200, 200)
end)

-- Cycle Delay
local DelayLabel = Instance.new("TextLabel")
DelayLabel.Parent = SettingsFrame
DelayLabel.BackgroundTransparency = 1
DelayLabel.Position = UDim2.new(0, 12, 0.55, 0)
DelayLabel.Size = UDim2.new(1, -24, 0, 20)
DelayLabel.Font = Enum.Font.GothamBold
DelayLabel.Text = "⏱️ Cycle Delay: " .. cycleDelay .. "s"
DelayLabel.TextColor3 = Color3.fromRGB(150, 200, 255)
DelayLabel.TextSize = 12
DelayLabel.TextXAlignment = Enum.TextXAlignment.Left

local DelaySlider = Instance.new("TextButton")
DelaySlider.Parent = SettingsFrame
DelaySlider.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
DelaySlider.Position = UDim2.new(0.06, 0, 0.75, 0)
DelaySlider.Size = UDim2.new(0.88, 0, 0, 30)
DelaySlider.Font = Enum.Font.Gotham
DelaySlider.Text = "Adjust (0.05-1.0)"
DelaySlider.TextColor3 = Color3.fromRGB(255, 255, 255)
DelaySlider.TextSize = 11

local DelayCorner = Instance.new("UICorner")
DelayCorner.CornerRadius = UDim.new(0, 6)
DelayCorner.Parent = DelaySlider

local delayOptions = {0.05, 0.1, 0.15, 0.2, 0.3, 0.5, 0.7, 1.0}
local delayIndex = 2 -- Start at 0.1

DelaySlider.MouseButton1Click:Connect(function()
    delayIndex = delayIndex + 1
    if delayIndex > #delayOptions then delayIndex = 1 end
    cycleDelay = delayOptions[delayIndex]
    DelayLabel.Text = "⏱️ Cycle Delay: " .. cycleDelay .. "s"
    
    -- Color based on speed
    if cycleDelay <= 0.1 then
        DelayLabel.TextColor3 = Color3.fromRGB(255, 100, 100) -- Fast = Red
    elseif cycleDelay <= 0.3 then
        DelayLabel.TextColor3 = Color3.fromRGB(255, 200, 100) -- Medium = Orange
    else
        DelayLabel.TextColor3 = Color3.fromRGB(150, 255, 150) -- Slow = Green
    end
end)

-- Combat Power Display
local CPFrame = Instance.new("Frame")
CPFrame.Parent = ContentFrame
CPFrame.BackgroundColor3 = Color3.fromRGB(40, 30, 50)
CPFrame.Position = UDim2.new(0.08, 0, 0.84, 0)
CPFrame.Size = UDim2.new(0.84, 0, 0, 45)

local CPCorner = Instance.new("UICorner")
CPCorner.CornerRadius = UDim.new(0, 10)
CPCorner.Parent = CPFrame

local CombatPowerLabel = Instance.new("TextLabel")
CombatPowerLabel.Parent = CPFrame
CombatPowerLabel.BackgroundTransparency = 1
CombatPowerLabel.Size = UDim2.new(1, 0, 1, 0)
CombatPowerLabel.Font = Enum.Font.GothamBold
CombatPowerLabel.Text = "💪 Combat Power: Loading..."
CombatPowerLabel.TextColor3 = Color3.fromRGB(255, 200, 50)
CombatPowerLabel.TextSize = 14

-- Update Combat Power
local lastCP = 0
spawn(function()
    while wait(1) do
        pcall(function()
            local GetCombatPower = getRemote({"TrainSystem", "Bindable", "GetCombatPower"})
            if GetCombatPower then
                local cp = GetCombatPower:Invoke(player)
                if cp then
                    local formatted = tostring(cp):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
                    local gain = cp - lastCP
                    
                    if gain > 0 and autoTrainEnabled then
                        CombatPowerLabel.Text = "💪 CP: " .. formatted .. " (+)" .. gain .. "/s)"
                    else
                        CombatPowerLabel.Text = "💪 Combat Power: " .. formatted
                    end
                    
                    lastCP = cp
                    
                    -- Color based on power
                    if cp >= 1000000000000 then
                        CombatPowerLabel.TextColor3 = Color3.fromRGB(255, 100, 255)
                    elseif cp >= 1000000000 then
                        CombatPowerLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
                    elseif cp >= 1000000 then
                        CombatPowerLabel.TextColor3 = Color3.fromRGB(255, 200, 50)
                    end
                end
            end
        end)
    end
end)

-- Start Button Click
StartButton.MouseButton1Click:Connect(function()
    autoTrainEnabled = not autoTrainEnabled
    
    if autoTrainEnabled then
        StartButton.Text = "⏸ STOP TRAINING"
        StartButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
        StatusLabel.Text = "Status: Training Active ✅"
        StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        smartTrain()
    else
        StartButton.Text = "▶ START SMART TRAINING"
        StartButton.BackgroundColor3 = Color3.fromRGB(60, 180, 80)
        StatusLabel.Text = "Status: Inactive ⭕"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    end
end)

-- Minimize
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        MainFrame:TweenSize(UDim2.new(0, 380, 0, 50), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        MinimizeButton.Text = "□"
        ContentFrame.Visible = false
    else
        MainFrame:TweenSize(UDim2.new(0, 380, 0, 480), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        MinimizeButton.Text = "—"
        wait(0.1)
        ContentFrame.Visible = true
    end
end)

-- Close
CloseButton.MouseButton1Click:Connect(function()
    autoTrainEnabled = false
    MainFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 0.3, true)
    wait(0.3)
    ScreenGui:Destroy()
end)

print("✅ SMART TRAINER LOADED!")
print("💎 Optimized timing - every request counts!")
print("📈 No lag, consistent point gains")
print("🎯 Recommended: Speed 10 + Delay 0.1s")
